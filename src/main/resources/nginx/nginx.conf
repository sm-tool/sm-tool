http {
    # Szczegółowy format logowania dla debugowania
    log_format detailed_debug '$time_local [$remote_addr] "$request" '
                            'status: $status body_bytes: $body_bytes_sent '
                            'referer: "$http_referer" '
                            'user_agent: "$http_user_agent" '
                            'upstream_addr: "$upstream_addr" '
                            'upstream_status: "$upstream_status" '
                            'upstream_response_time: "$upstream_response_time" '
                            'request_time: "$request_time" '
                            'http_host: "$http_host" '
                            'proxy_host: "$proxy_host" '
                            'upstream_http_location: "$upstream_http_location" '
                            'request_completion: "$request_completion"';

    # Log dostępu z nowym formatem
    access_log /dev/stdout detailed_debug;

    # Zwiększony poziom szczegółowości logów błędów
    error_log /dev/stderr debug;

    # Reszta konfiguracji pozostaje bez zmian

    include mime.types;
    default_type application/octet-stream;
    server {
        listen 80;
        server_name localhost;

        location /api/ {
            proxy_pass http://backend:8000/api/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

            add_header 'Access-Control-Allow-Origin' 'http://nginx http://nginx:80 http://localhost:9000 http://localhost:6006 http://localhost';

            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Methods' 'GET,POST,PUT,PATCH,DELETE,OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Access-Control-Allow-Origin,scenarioid';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }
        location /auth/ {
            proxy_pass http://keycloak:8180/auth/;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-Forwarded-Host $host;
			proxy_set_header X-Forwarded-Port $server_port;
            
            proxy_hide_header Access-Control-Allow-Origin;
            add_header Access-Control-Allow-Origin $http_origin always;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization' always;
            add_header Access-Control-Allow-Credentials 'true' always;
            
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
        }

        location / {
            root /usr/share/nginx/html;
            try_files $uri $uri/ /index.html;
            index index.html;
        }

    }
}
events {
    worker_connections 1024;
}
